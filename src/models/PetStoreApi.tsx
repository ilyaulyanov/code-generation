/* Generated by restful-react */

import React from 'react'
import { Get, GetProps, useGet, UseGetProps } from 'restful-react'

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>

export interface Pet {
  id: number
  name: string
  tag?: string
}

export type Pets = Pet[]

export interface Error {
  code: number
  message: string
}

export interface ListPetsQueryParams {
  /**
   * How many items to return at one time (max 100)
   */
  limit?: number
}

export type ListPetsProps = Omit<
  GetProps<Pets, Error, ListPetsQueryParams, void>,
  'path'
>

/**
 * List all pets
 */
export const ListPets = (props: ListPetsProps) => (
  <Get<Pets, Error, ListPetsQueryParams, void> path={`/pets`} {...props} />
)

export type UseListPetsProps = Omit<
  UseGetProps<Pets, Error, ListPetsQueryParams, void>,
  'path'
>

/**
 * List all pets
 */
export const useListPets = (props: UseListPetsProps) =>
  useGet<Pets, Error, ListPetsQueryParams, void>(`/pets`, props)
