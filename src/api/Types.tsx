/* Generated by restful-react */

import React from 'react'
import {
  Get,
  GetProps,
  useGet,
  UseGetProps,
  Mutate,
  MutateProps,
  useMutate,
  UseMutateProps,
} from 'restful-react'

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>

/**
 * A pet.
 */
export type Pet = NewPet & {
  id: number
}

/**
 * A new pet.
 */
export interface NewPet {
  name: string
  tag?: string
}

/**
 * A discriminator example.
 */
export type CatOrDog = Cat | Dog

/**
 * A cat, meow.
 */
export interface Cat {
  type: 'cat'
  breed: 'labrador' | 'carlin' | 'beagle'
}

/**
 * A dog, wooof.
 */
export interface Dog {
  type: 'dog'
  breed: 'saimois' | 'bengal' | 'british shorthair'
}

/**
 * An error :(
 */
export interface Error {
  code: number
  message: string
}

/**
 * Request description
 */
export interface Request {
  action?: ('create' | 'read' | 'update' | 'delete')[]
}

export type UpdatePetRequestRequestBody = NewPet

export interface FindPetsQueryParams {
  /**
   * tags to filter by
   */
  tags?: string[]
  /**
   * maximum number of results to return
   */
  limit?: number
}

export type FindPetsProps = Omit<
  GetProps<Pet[], Error, FindPetsQueryParams, void>,
  'path'
>
export type UseFindPetsProps = Omit<
  UseGetProps<Pet[], Error, FindPetsQueryParams, void>,
  'path'
>
export type AddPetProps = Omit<
  MutateProps<Pet, Error, void, NewPet, void>,
  'path' | 'verb'
>
export type UseAddPetProps = Omit<
  UseMutateProps<Pet, Error, void, NewPet, void>,
  'path' | 'verb'
>

export interface FindPetByIdPathParams {
  /**
   * ID of pet to fetch
   */
  id: number
}

export type FindPetByIdProps = Omit<
  GetProps<Pet, Error, void, FindPetByIdPathParams>,
  'path'
> &
  FindPetByIdPathParams
export type UseFindPetByIdProps = Omit<
  UseGetProps<Pet, Error, void, FindPetByIdPathParams>,
  'path'
> &
  FindPetByIdPathParams
export type DeletePetProps = Omit<
  MutateProps<void, Error, void, number, void>,
  'path' | 'verb'
>
export type UseDeletePetProps = Omit<
  UseMutateProps<void, Error, void, number, void>,
  'path' | 'verb'
>

export interface UpdatePetPathParams {
  /**
   * ID of pet to update
   */
  id: number
}

export type UpdatePetProps = Omit<
  MutateProps<
    Pet,
    Error,
    void,
    UpdatePetRequestRequestBody,
    UpdatePetPathParams
  >,
  'path' | 'verb'
> &
  UpdatePetPathParams
export type UseUpdatePetProps = Omit<
  UseMutateProps<
    Pet,
    Error,
    void,
    UpdatePetRequestRequestBody,
    UpdatePetPathParams
  >,
  'path' | 'verb'
> &
  UpdatePetPathParams
